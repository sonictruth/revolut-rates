{"version":3,"sources":["/Users/alex/work/revolut-rates/src/$_lazy_route_resource lazy","/Users/alex/work/revolut-rates/src/app/app.component.css","/Users/alex/work/revolut-rates/src/app/app.component.html","/Users/alex/work/revolut-rates/src/app/app.component.ts","/Users/alex/work/revolut-rates/src/app/app.module.ts","/Users/alex/work/revolut-rates/src/app/material.module.ts","/Users/alex/work/revolut-rates/src/environments/environment.ts","/Users/alex/work/revolut-rates/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/alex/work/revolut-rates/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/alex/work/revolut-rates/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <span>\\n      <mat-icon>trending_up</mat-icon>\\n    </span>\\n    <span>Revolut Exchange Rates</span>\\n  </mat-toolbar>\\n\\n  <div class=\\\"container\\\">\\n    <mat-form-field>\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Ammount\\\" [(ngModel)]=\\\"newExchange.ammount\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"From\\\" [(value)]=\\\"newExchange.from\\\">\\n        <mat-option *ngFor=\\\"let currency of currencies\\\" [value]=\\\"currency\\\">\\n          {{ currency }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"To\\\" [(value)]=\\\"newExchange.to\\\">\\n        <mat-option *ngFor=\\\"let currency of currencies\\\" [value]=\\\"currency\\\">\\n          {{ currency }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div>\\n      <button (click)=\\\"add()\\\" mat-icon-button color=\\\"primary\\\">\\n        <mat-icon>add</mat-icon>\\n      </button>\\n      <button (click)=\\\"loadRates()\\\" mat-icon-button color=\\\"secondary\\\">\\n        <mat-icon>refresh</mat-icon>\\n      </button>\\n      <button (click)=\\\"clear()\\\" mat-icon-button color=\\\"warn\\\">\\n        <mat-icon>delete</mat-icon>\\n      </button>\\n    </div>\\n  </div>\\n\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" *ngIf=\\\"dataSource && dataSource.data.length > 0\\\">\\n\\n    <ng-container matColumnDef=\\\"from\\\">\\n      <mat-header-cell *matHeaderCellDef> From </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.from}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"to\\\">\\n      <mat-header-cell *matHeaderCellDef> To </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.to}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"ammount\\\">\\n      <mat-header-cell *matHeaderCellDef> Ammount </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ammount}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"result\\\">\\n      <mat-header-cell *matHeaderCellDef> Result </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.result}} </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/alex/work/revolut-rates/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/forkJoin';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  displayedColumns = ['from', 'to', 'ammount', 'result'];\n  dataSource = null;\n  newExchange = {\n    to: null,\n    from: null,\n    ammount: null\n  };\n  storageName = 'rates';\n  userExchanges = [];\n  currencies = ['BTC', 'ETH', 'LTC', 'EUR', 'GBP', 'USD', 'AUD', 'CAD', 'CZK', 'DKK', 'HKD', 'HUF', 'ILS', 'JPY',\n    'MXN', 'NZD', 'NOK', 'PLN', 'RON', 'SGD', 'ZAR', 'SEK', 'CHF', 'THB', 'TRY', 'AED', 'BGN', 'SAR', 'QAR'];\n\n  constructor(\n    private http: Http\n  ) { }\n\n  ngOnInit() {\n    this.loadRates();\n    this.httpRequest();\n  }\n  httpRequest() {\n    const x = this.http.get('https://cors-anywhere.herokuapp.com/https://www.revolut.com/api/quote/internal/BTCGBP')\n      .map((res: Response) => res.json());\n    Observable.forkJoin([x])\n      .subscribe(data => {\n        console.log('yyyy', data);\n      });\n  }\n  loadRates() {\n    this.dataSource = null;\n    let displayRates: Rate[] = [];\n    this.loadFromStorage();\n    displayRates = this.userExchanges.map(ex => {\n      return {\n        ammount: ex.ammount,\n        to: ex.to,\n        from: ex.from,\n        result: 0\n      };\n    });\n    this.dataSource = new MatTableDataSource<Rate>(displayRates);\n  }\n  add() {\n    if (!this.newExchange.from || !this.newExchange.to || !this.newExchange.ammount) {\n      return;\n    }\n    this.userExchanges.push(Object.assign({}, this.newExchange));\n    this.newExchange = {\n      to: null,\n      from: null,\n      ammount: null\n    };\n    this.saveToStorage();\n  }\n  clear() {\n    localStorage.removeItem(this.storageName);\n    this.loadRates();\n  }\n  saveToStorage() {\n    localStorage.setItem(this.storageName, JSON.stringify(this.userExchanges));\n    this.loadRates();\n  }\n  loadFromStorage() {\n    const data = localStorage.getItem(this.storageName);\n    if (data) {\n      this.userExchanges = JSON.parse(data);\n    } else {\n      this.userExchanges = [];\n    }\n  }\n}\n\nexport interface Rate {\n  from: string;\n  to: string;\n  ammount: number;\n  result: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/work/revolut-rates/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/work/revolut-rates/src/app/app.module.ts","import { NgModule } from '@angular/core';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  } from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/work/revolut-rates/src/app/material.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/work/revolut-rates/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/alex/work/revolut-rates/src/main.ts"],"sourceRoot":"webpack:///"}